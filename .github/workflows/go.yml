name: Build & Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to build and release (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  build-linux-amd64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: '1.21'
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libayatana-appindicator3-dev pkg-config
      - name: Build Linux AMD64
        run: GOOS=linux GOARCH=amd64 go build -o freedom-core-linux-x64 ./cmd/server
      - uses: actions/upload-artifact@v4
        with:
          name: freedom-core-linux-x64
          path: freedom-core-linux-x64

  build-linux-386:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: '1.21'
      - name: Build Linux 386
        run: GOOS=linux GOARCH=386 CGO_ENABLED=0 go build -o freedom-core-linux-x86 ./cmd/server
      - uses: actions/upload-artifact@v4
        with:
          name: freedom-core-linux-x86
          path: freedom-core-linux-x86

  build-macos-amd64:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: '1.21'
      - name: Build macOS AMD64
        run: |
          go build -o freedom-core-macos-x64 ./cmd/server
      - uses: actions/upload-artifact@v4
        with:
          name: freedom-core-macos-x64
          path: freedom-core-macos-x64

  build-macos-arm64:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: '1.21'
      - name: Build macOS ARM64
        run: |
          go build -o freedom-core-macos-arm64 ./cmd/server
      - uses: actions/upload-artifact@v4
        with:
          name: freedom-core-macos-arm64
          path: freedom-core-macos-arm64

  build-windows-amd64:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: '1.21'
      - name: Build Windows AMD64
        shell: pwsh
        run: |
          go build -ldflags "-H=windowsgui" -o freedom-core-windows-x64.exe ./cmd/server
      - uses: actions/upload-artifact@v4
        with:
          name: freedom-core-windows-x64.exe
          path: freedom-core-windows-x64.exe

  build-windows-386:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: '1.21'
      - name: Build Windows 386
        shell: pwsh
        run: |
          go build -ldflags "-H=windowsgui" -o freedom-core-windows-x86.exe ./cmd/server
      - uses: actions/upload-artifact@v4
        with:
          name: freedom-core-windows-x86.exe
          path: freedom-core-windows-x86.exe

  release:
    needs: [build-linux-amd64, build-linux-386, build-macos-amd64, build-macos-arm64, build-windows-amd64, build-windows-386]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Prepare release assets
        run: |
          mkdir release-assets
          find artifacts -type f -exec cp {} release-assets/ \;
      - name: Upload Executables to Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.tag || github.ref_name }}
          name: ${{ github.event.inputs.tag || github.ref_name }}
          files: release-assets/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}